<section
  id="faq"
  class="bg-[var(--color-background)] text-[var(--color-text)] py-16 px-6"
>
  <h2 class="text-3xl sm:text-4xl font-bold font-title text-center mb-4">
    Preguntas Frecuentes
  </h2>
  <p class="text-center opacity-80 max-w-xl mx-auto mb-8 font-body">
    No te quedes con dudas. Respondemos lo mÃ¡s importante ðŸ‘‡
  </p>

  <div
    class="max-w-3xl mx-auto space-y-6"
    id="faq-container"
    itemscope
    itemtype="https://schema.org/FAQPage"
  >
    <!-- JS injecta las preguntas -->
  </div>
</section>

<script is:inline type="module">
  const faqs = [
    {
      category: "InscripciÃ³n",
      question: "Â¿CÃ³mo me inscribo?",
      answer:
        "PodÃ©s hacerlo desde la secciÃ³n de contacto o inscripciones. TambiÃ©n vÃ­a WhatsApp.",
    },
    {
      category: "Cursos",
      question: "Â¿QuÃ© edad deben tener los chicos para empezar?",
      answer:
        "Pueden comenzar desde los 6 aÃ±os. Adaptamos los cursos segÃºn su edad y experiencia previa.",
    },
    {
      category: "Materiales",
      question: "Â¿Necesitan traer su propio material?",
      answer:
        "No. Todos los materiales (kits LEGO, tablets, etc.) estÃ¡n incluidos durante las clases.",
    },
    {
      category: "Cursos",
      question: "Â¿Se necesita experiencia previa en programaciÃ³n?",
      answer:
        "No hace falta. Empezamos desde cero y acompaÃ±amos su progreso paso a paso.",
    },
    {
      category: "MetodologÃ­a",
      question: "Â¿Las clases son grupales o individuales?",
      answer:
        "Las clases son grupales, promoviendo el trabajo en equipo, pero con seguimiento individual.",
    },
  ];

  const faqContainer = document.getElementById("faq-container");
  let openItem = null;

  function renderFaqs() {
    faqContainer.innerHTML = "";

    const grouped = faqs.reduce((acc, item) => {
      acc[item.category] = acc[item.category] || [];
      acc[item.category].push(item);
      return acc;
    }, {});

    for (const category in grouped) {
      const catHeading = document.createElement("h3");
      catHeading.className =
        "text-xl font-bold text-left mt-6 mb-2 text-primary dark:text-secondary";
      catHeading.textContent = category;
      faqContainer.appendChild(catHeading);

      grouped[category].forEach(({ question, answer }, index) => {
        const wrapper = document.createElement("div");
        wrapper.setAttribute("itemscope", "");
        wrapper.setAttribute("itemprop", "mainEntity");
        wrapper.setAttribute("itemtype", "https://schema.org/Question");

        const btn = document.createElement("button");
        btn.type = "button";
        btn.className =
          "w-full text-left px-6 py-4 rounded-lg bg-[var(--color-card)] border border-neutral-200 dark:border-neutral-700 text-sm sm:text-base font-medium hover:bg-neutral-100/80 dark:hover:bg-neutral-800/50 flex justify-between items-center transition";
        btn.setAttribute("aria-expanded", "false");
        btn.setAttribute("aria-controls", `faq-answer-${index}`);
        btn.innerHTML = `
          <span itemprop="name">${question}</span>
          <svg class="w-5 h-5 ml-3 transition-transform duration-300" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 9l6 6 6-6" />
          </svg>
        `;

        const answerDiv = document.createElement("div");
        answerDiv.className =
          "max-h-0 overflow-hidden transition-all duration-500 px-6 text-sm sm:text-base opacity-80";
        answerDiv.id = `faq-answer-${index}`;
        answerDiv.setAttribute("itemprop", "acceptedAnswer");
        answerDiv.setAttribute("itemscope", "");
        answerDiv.setAttribute("itemtype", "https://schema.org/Answer");
        answerDiv.innerHTML = `<p itemprop="text" class="py-3">${answer}</p>`;

        btn.addEventListener("click", () => {
          if (openItem && openItem !== btn) {
            openItem.setAttribute("aria-expanded", "false");
            openItem.nextElementSibling.style.maxHeight = null;
            openItem.querySelector("svg").style.transform = "rotate(0deg)";
          }

          const isOpen = btn.getAttribute("aria-expanded") === "true";
          btn.setAttribute("aria-expanded", (!isOpen).toString());
          answerDiv.style.maxHeight = isOpen
            ? null
            : answerDiv.scrollHeight + "px";
          btn.querySelector("svg").style.transform = isOpen
            ? "rotate(0deg)"
            : "rotate(180deg)";

          openItem = isOpen ? null : btn;
        });

        wrapper.appendChild(btn);
        wrapper.appendChild(answerDiv);
        faqContainer.appendChild(wrapper);
      });
    }
  }

  renderFaqs();
</script>
