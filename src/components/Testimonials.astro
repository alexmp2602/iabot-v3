---
const testimonials = [
  {
    name: "Laura (mamá de Joaquín)",
    quote:
      "Mi hijo espera con entusiasmo cada clase. No solo aprende, ¡sino que se divierte muchísimo!",
  },
  {
    name: "Carlos (papá de Sofía)",
    quote:
      "Gracias a IABOT, mi hija ahora dice que quiere ser ingeniera. ¡Increíble lo que lograron!",
  },
  {
    name: "Tobías (alumno de 12 años)",
    quote:
      "¡Hice mi primer robot! Nunca pensé que programar podía ser tan divertido.",
  },
];
---

<div
  id="testimonial-container"
  class="relative max-w-3xl mx-auto overflow-hidden"
>
  <div class="relative transition-transform duration-500 ease-in-out">
    <div
      id="testimonial-slide"
      class="p-6 shadow-md rounded-lg bg-white dark:bg-neutral-900 translate-x-0"
    >
      <p
        id="testimonial-quote"
        class="text-lg text-neutral-800 dark:text-neutral-100 italic mb-4"
      >
        {testimonials[0].quote}
      </p>
      <p
        id="testimonial-name"
        class="text-sm text-neutral-600 dark:text-neutral-400 font-medium text-right"
      >
        — {testimonials[0].name}
      </p>
    </div>
  </div>

  <div class="flex justify-center gap-3 mt-6">
    {
      testimonials.map((_, i) => (
        <button
          class={`w-3 h-3 rounded-full ${i === 0 ? "bg-primary" : "bg-neutral-400 dark:bg-neutral-600"}`}
          data-index={i}
          aria-label={`Ver testimonio ${i + 1}`}
        />
      ))
    }
  </div>

  <div class="absolute top-1/2 left-0 transform -translate-y-1/2">
    <button
      id="prevBtn"
      class="p-2 text-gray-500 hover:text-primary"
      aria-label="Anterior">&larr;</button
    >
  </div>
  <div class="absolute top-1/2 right-0 transform -translate-y-1/2">
    <button
      id="nextBtn"
      class="p-2 text-gray-500 hover:text-primary"
      aria-label="Siguiente">&rarr;</button
    >
  </div>
</div>

<script is:inline>
  const testimonials = JSON.parse(`{JSON.stringify(testimonials)}`);
  const quote = document.getElementById("testimonial-quote");
  const name = document.getElementById("testimonial-name");
  const slide = document.getElementById("testimonial-slide");
  const container = document.getElementById("testimonial-container");
  const buttons = document.querySelectorAll("button[data-index]");
  const prevBtn = document.getElementById("prevBtn");
  const nextBtn = document.getElementById("nextBtn");

  let index = 0;
  let interval;

  function animateSlide(direction = "left") {
    slide.classList.remove("translate-x-0");
    slide.classList.add(
      direction === "left" ? "-translate-x-full" : "translate-x-full"
    );
    setTimeout(() => {
      slide.classList.add("hidden");
      slide.classList.remove("-translate-x-full", "translate-x-full");

      quote.textContent = testimonials[index].quote;
      name.textContent = "— " + testimonials[index].name;

      buttons.forEach((btn, i) => {
        btn.classList.toggle("bg-primary", i === index);
        btn.classList.toggle("bg-neutral-400", i !== index);
        btn.classList.toggle("dark:bg-neutral-600", i !== index);
      });

      slide.classList.remove("hidden");
      slide.classList.add(
        direction === "left" ? "translate-x-full" : "-translate-x-full"
      );

      setTimeout(() => {
        slide.classList.remove("translate-x-full", "-translate-x-full");
        slide.classList.add("translate-x-0");
      }, 20);
    }, 250);
  }

  function goTo(i, dir = "left") {
    clearInterval(interval);
    index = (i + testimonials.length) % testimonials.length;
    animateSlide(dir);
    startAutoplay();
  }

  function startAutoplay() {
    interval = setInterval(() => {
      goTo(index + 1, "left");
    }, 6000);
  }

  buttons.forEach((btn) => {
    btn.addEventListener("click", () =>
      goTo(parseInt(btn.dataset.index), "left")
    );
  });

  prevBtn.addEventListener("click", () => goTo(index - 1, "right"));
  nextBtn.addEventListener("click", () => goTo(index + 1, "left"));

  let startX = 0;
  container.addEventListener("touchstart", (e) => {
    startX = e.touches[0].clientX;
  });
  container.addEventListener("touchend", (e) => {
    const diff = e.changedTouches[0].clientX - startX;
    if (Math.abs(diff) > 50)
      goTo(index + (diff < 0 ? 1 : -1), diff < 0 ? "left" : "right");
  });

  startAutoplay();
</script>
